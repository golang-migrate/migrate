name: CI

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2

  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        go: ["1.15", "1.16"]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Run test
        run: make test COVERAGE_DIR=/tmp/coverage

      - name: Send goveralls coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: /tmp/coverage/combined.txt

  docker-buildx:
    runs-on: ubuntu-20.04
    needs: [lint, test]
    # This job only runs when
    # 1. When the previous `lint` and `test` jobs has completed successfully
    # 2. When the repository is not a fork, i.e. it will only run on the official golang-migrate/migrate
    # 3. When the workflow run is trigged by a tag with `v` prefix
    if: ${{ success() && github.repository == 'golang-migrate/migrate' && contains(github.ref, 'refs/tags/v') }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        id: qemu
        with:
          # alpine image doesn't support linux/riscv64
          platforms: linux/386,linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6,linux/ppc64le,linux/s390x

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set tag
        id: tag
        run: echo ::set-output name=tag::"$(echo "${GITHUB_REF}" | sed "s/refs\/tags\/v//")"

      - name: Build the Docker image and push
        uses: docker/build-push-action@v2
        with:
          platforms: ${{ steps.qemu.outputs.platforms }}
          # push: true
          build-args: |
            VERSION=${{ steps.tag.outputs.tag }}
          tags: |
            migrate/migrate:latest
            migrate/migrate:${{ steps.tag.outputs.tag }}

  release:
    runs-on: ubuntu-20.04
    needs: [lint, test]
    if: ${{ success() && github.repository == 'golang-migrate/migrate' && contains(github.ref, 'refs/tags/v') }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Build binaries
        run: make build-cli

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "cli/build/migrate.*.tar.gz,sha256sum.txt"
          token: ${{ secrets.GITHUB_TOKEN }}
